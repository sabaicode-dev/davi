name: Deploy React App to AWS S3

on:
  pull_request:
    branches: [deploy_dashboard_app]
  push:
    branches: [deploy_dashboard_app]

defaults:
  run:
    working-directory: ./apps/dashboard-app

jobs:
  # Step 1: Build the React App
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Debug: List files in the root of the repository to confirm structure
      - name: List files in the root directory
        run: |
          echo "Listing files in the root of the repository"
          tree -L 2 # List the entire directory structure of the repository to verify if apps/dashboard-app exists

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20" # Use the correct Node.js version

      # Cache npm dependencies to speed up the build
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      # Install dependencies
      - name: Install Dependencies
        run: npm install

      # Build React app using Webpack
      - name: Build React App
        run: |
          npm run build  # This uses the build script in your package.json which runs Webpack

      # List files after build to check the build folder
      - name: List files after build
        run: |
          echo "Listing files in the directory after build"
          ls -R ./  # List files in the current directory to see if build folder exists

      # List contents of the build directory if it exists
      - name: List contents of build directory
        run: |
          echo "Listing contents of the build directory"
          ls -R ./build  # List contents recursively to make sure ./build is created
        continue-on-error: false

  # Step 2: Deploy to AWS S3
  deploy:
    runs-on: ubuntu-latest
    needs: build # Make sure the build job is successful before deploying
    if: success() # Only deploy if the build was successful

    steps:
      # Checkout the repository code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Debug: List files in the root directory again
      - name: List files in the root directory again
        run: |
          echo "Listing files in the root of the repository"
          tree -L 2  # Confirm directory structure

      # Deploy to S3 using AWS CLI
      - name: Deploy to S3 using AWS CLI
        run: |
          aws s3 sync ./build s3://${{ secrets.AWS_S3_BUCKET }} --delete --acl public-read
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

      # Optional: Invalidate CloudFront cache (if using CloudFront)
      # - name: Invalidate CloudFront Cache
      #   if: success()
      #   run: |
      #     aws cloudfront create-invalidation \
      #       --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} \
      #       --paths "/*"
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_REGION: ${{ secrets.AWS_REGION }}

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   if: github.ref == 'refs/heads/deploy_dashboard_app'

  #   defaults:
  #     run:
  #       working-directory: ./apps/dashboard-app # Set working directory here for deploy job

  #   steps:
  #     # Checkout the code to the root of the repository
  #     - name: Checkout Code
  #       uses: actions/checkout@v3

  #     # Debug: List files in the root directory again
  #     - name: List files in the root directory again
  #       run: |
  #         echo "Listing files in the root of the repository"
  #         tree -L 2  # Confirm directory structure

  #     # Set up Node.js
  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: "20"

  #     # Step 1: Install Dependencies
  #     - name: Install Dependencies
  #       run: npm install

  #     # Debug: List files in the build directory
  #     - name: List files in the build directory
  #       run: |
  #         echo "Listing files in the build directory"
  #         tree -L 2  # Check if the build directory exists

  #     # Deploy to S3
  #     - name: Deploy to S3
  #       uses: jakejarvis/s3-sync-action@v0.5.1
  #       with:
  #         args: --acl public-read --delete
  #       env:
  #         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
  #         AWS_REGION: ${{ secrets.AWS_REGION }}
  #         SOURCE_DIR: "./build" # Correct build directory path

  # Optional: Invalidate CloudFront cache (if using CloudFront)
  # - name: Invalidate CloudFront Cache
  #   if: success()
  #   run: |
  #     aws cloudfront create-invalidation \
  #       --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} \
  #       --paths "/*"
  #   env:
  #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #     AWS_REGION: ${{ secrets.AWS_REGION }}
